{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/TextField/TextField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","TextField","props","name","changeHandler","value","errors","blurHandler","htmlFor","id","type","placeholder","onChange","onBlur","NewMovie","state","formErrors","formValid","titleValid","imgUrlValid","imdbUrlvalid","imdbIdValid","target","setState","validateField","submitHandler","event","preventDefault","addMovie","validateForm","prevState","fieldName","this","fieldValidationErrors","length","test","onSubmit","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48e41f0d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropsType from 'prop-types';\n\nexport const TextField = (props) => {\n  const {\n    name,\n    changeHandler,\n    value,\n    errors,\n    blurHandler,\n  } = props;\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">{`Movie ${name}`}</label>\n      <input\n        className={`input ${errors[name] ? 'is-danger' : ''}`}\n        id={name}\n        type=\"text\"\n        name={name}\n        value={value}\n        placeholder={`Enter ${name}...`}\n        onChange={changeHandler}\n        onBlur={blurHandler}\n      />\n      {errors[name]\n      && <p className=\"help is-danger\">{`This field ${errors[name]}`}</p>}\n    </div>\n  );\n};\n\nTextField.propTypes = {\n  name: PropsType.string.isRequired,\n  changeHandler: PropsType.func.isRequired,\n  blurHandler: PropsType.func.isRequired,\n  value: PropsType.string.isRequired,\n  errors: PropsType.shape({\n    title: PropsType.string,\n    imgUrl: PropsType.string,\n    imdbUrl: PropsType.string,\n    imdbId: PropsType.string,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '../TextField/TextField';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    formErrors: {\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    formValid: false,\n    titleValid: false,\n    imgUrlValid: false,\n    imdbUrlvalid: false,\n    imdbIdValid: false,\n  };\n\n  changeHandler = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n\n  blurHandler = ({ target }) => {\n    const { name, value } = target;\n\n    this.validateField(name, value);\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const { addMovie } = this.props;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      formValid: false,\n      titleValid: false,\n      imgUrlValid: false,\n      imdbUrlvalid: false,\n      imdbIdValid: false,\n    });\n  };\n\n  validateForm = () => {\n    this.setState(prevState => ({\n      formValid: prevState.titleValid\n      && prevState.imgUrlValid\n      && prevState.imdbUrlvalid\n      && prevState.imdbIdValid,\n    }));\n  }\n\n  validateField(fieldName, value) {\n    this.setState((prevState) => {\n      const fieldValidationErrors = prevState.formErrors;\n      let {\n        titleValid,\n        imgUrlValid,\n        imdbUrlvalid,\n        imdbIdValid,\n      } = prevState;\n\n      switch (fieldName) {\n        case 'title': {\n          titleValid = value.length > 0;\n          fieldValidationErrors.title = titleValid ? '' : 'is required';\n          break;\n        }\n\n        case 'imdbId': {\n          imdbIdValid = value.length > 0;\n          fieldValidationErrors.imdbId = imdbIdValid ? '' : 'is required';\n          break;\n        }\n\n        case 'imgUrl': {\n          /* eslint-disable-next-line */\n          imgUrlValid = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n            .test(value);\n          fieldValidationErrors.imgUrl = imgUrlValid ? '' : 'must be url';\n          break;\n        }\n\n        case 'imdbUrl': {\n          /* eslint-disable-next-line */\n          imdbUrlvalid = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/\n            .test(value);\n          fieldValidationErrors.imdbUrl = imdbUrlvalid ? '' : 'must be url';\n          break;\n        }\n\n        default: break;\n      }\n\n      return {\n        formErrors: fieldValidationErrors,\n        titleValid,\n        imdbIdValid,\n        imgUrlValid,\n        imdbUrlvalid,\n      };\n    }, this.validateForm);\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      formErrors,\n      formValid,\n    } = this.state;\n\n    return (\n      <form name=\"new-movie\" onSubmit={this.submitHandler}>\n        <TextField\n          name=\"title\"\n          value={title}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <div className=\"field\">\n          <label\n            htmlFor=\"description\"\n            className=\"label\"\n          >\n              Movie description\n          </label>\n          <div className=\"control\">\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={description}\n              className=\"textarea\"\n              placeholder=\"Description...\"\n              onChange={this.changeHandler}\n            />\n          </div>\n        </div>\n        <TextField\n          name=\"imgUrl\"\n          value={imgUrl}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <TextField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <TextField\n          name=\"imdbId\"\n          value={imdbId}\n          errors={formErrors}\n          changeHandler={this.changeHandler}\n          blurHandler={this.blurHandler}\n        />\n        <div className=\"control\">\n          <button\n            className=\"button is-link\"\n            type=\"submit\"\n            disabled={!formValid}\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        movies: [...prevState.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}